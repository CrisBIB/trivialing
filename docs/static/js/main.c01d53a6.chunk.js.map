{"version":3,"sources":["Images/Trivialis2.png","Images/react.png","Components/Footer.js","Components/LandingPage.js","Components/Header.js","Services/Api.js","Components/Counter.js","Components/Time.js","Components/RandomInputs.js","Components/CorrectInput.js","Components/TriviaQuestions.js","Components/AnswersList.js","Components/QuizPage.js","Components/App.js","index.js"],"names":["Footer","styled","footer","Container","div","React","img","FooterApp","href","target","src","logoReact","title","alt","Main","main","Title","h1","Image","Subtitle","h2","LandingPage","logoTrivialis","to","HeaderApp","header","Header","fetch","then","response","json","dataApi","number","text","Counter","props","counter","Time","ProgressBar","striped","variant","now","RandomInputs","memo","getRandomNumber","max","Math","ceil","random","type","name","id","value","CorrectInput","rightOption","parseInt","trivia","rightOptionId","onChange","showCorrectAnswer","upDateListAnswer","Form","form","Question","htmlFor","AnswersList","console","log","list","answers","map","answer","index","Answer","h3","QuizPage","useState","setTrivia","fragment","setFragment","correctAnswer","setCorrectAnswer","numberCounter","setNumberCounter","nextStep","setNextStep","questionsAnswered","setQuestionsAnswered","useEffect","api","dataNumber","dataFragment","toUpperCase","Button","onClick","nextNumberCounter","upDateCounter","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c01d53a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Trivialis2.c97a0504.png\";","export default __webpack_public_path__ + \"static/media/react.d32b912d.png\";","import styled from \"styled-components\";\r\nimport logoReact from \"../Images/react.png\";\r\n\r\nconst Footer = styled.footer`\r\n  background: black;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 90%;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst React = styled.img`\r\n  width: 25px;\r\n`;\r\n\r\nconst FooterApp = () => {\r\n  return (\r\n    <Footer>\r\n      <small>CrisBIB &copy; 2021</small>\r\n      <Container>\r\n        <small>Powered by</small>\r\n        <a href=\"https://es.reactjs.org/\" target=\"_blank\">\r\n          <React src={logoReact} title=\"Logo React\" alt=\"logo-reactjs\" />\r\n        </a>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default FooterApp;\r\n","import logoTrivialis from \"../Images/Trivialis2.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  height: 90vh;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 3em;\r\n  margin-top: 1em;\r\n  color: #007787;\r\n`;\r\nconst Image = styled.img`\r\n  width: 30%;\r\n  display: inline-block;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 70px;\r\n  z-index: -1;\r\n`;\r\nconst Subtitle = styled.h2`\r\n  font-size: 1.7em;\r\n  text-align: center;\r\n  margin-top: 1em;\r\n  color: #007787;\r\n`;\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <Main>\r\n        <Container>\r\n          <Title>TRIVIALIS</Title>\r\n          <Image\r\n            title=\"Logo Trivialis\"\r\n            src={logoTrivialis}\r\n            alt=\"logo-trivialis\"\r\n          />\r\n        </Container>\r\n        <Subtitle>Wellcome to the amazing world of numbers!</Subtitle>\r\n        <div>\r\n          {/*Hacer un colapsable*/}\r\n          <h4>Ver instrucciones</h4>\r\n        </div>\r\n        <Link to=\"/quizpage\">READY TO QUIZ?</Link>\r\n      </Main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import logoTrivialis from \"../Images/Trivialis2.png\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderApp = styled.header`\r\n  height: 10vh;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0.8em;\r\n  border-bottom: solid 1px #007787;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 1em;\r\n  color: #007787;\r\n  margin-top: 0.8em;\r\n`;\r\nconst Image = styled.img`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderApp>\r\n      <Container>\r\n        <Title>TRIVIALIS</Title>\r\n\r\n        <Image\r\n          title=\"Logo Trivialis\"\r\n          src={logoTrivialis}\r\n          alt=\"logo-trivialis\"\r\n        />\r\n      </Container>\r\n    </HeaderApp>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const getRandomNumberFromApi = () => {\r\n  return fetch(`//numbersapi.com/random/trivia?json`)\r\n    .then((response) => response.json())\r\n    .then((dataApi) => {\r\n      return dataApi;\r\n    });\r\n};\r\nconst getFragmentNumberFromApi = (number) => {\r\n  return fetch(`//numbersapi.com/${number}/trivia?fragment`)\r\n    .then((response) => response.text())\r\n    .then((dataApi) => {\r\n      return dataApi;\r\n    });\r\n};\r\n\r\nexport default {\r\n  trivia: getRandomNumberFromApi,\r\n  fragment: getFragmentNumberFromApi,\r\n};\r\n","const Counter = (props) => {\r\n  return (\r\n    <div>\r\n      <small> Question {props.counter} of 10</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Time = () => {\r\n  return (\r\n    <>\r\n      <p>Probando...</p>\r\n      <ProgressBar>\r\n        <ProgressBar striped variant=\"success\" now={35} key={1} />\r\n        <ProgressBar variant=\"warning\" now={20} key={2} />\r\n        <ProgressBar striped variant=\"danger\" now={10} key={3} />\r\n      </ProgressBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\n\r\nconst RandomInputs = React.memo((props) => {\r\n  const getRandomNumber = (max) => {\r\n    return Math.ceil(Math.random() * max);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        {getRandomNumber(1000)}\r\n        <input\r\n          type=\"radio\"\r\n          name=\"options\"\r\n          id=\"options\"\r\n          value=\"\"\r\n          id={getRandomNumber(1000)}\r\n        ></input>\r\n      </label>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RandomInputs;\r\n","const CorrectInput = (props) => {\r\n  const rightOption = parseInt(props.trivia.number);\r\n  const rightOptionId = props.trivia.number;\r\n\r\n  //Esta función me servirá para guardar en el estado las respuestas correctas que se den, y pintarlas en verdes en el listado de preguntas contestadas. Lo que hará que se muestra la respuesta correcta y que se actualice el listado de respuesta, será el límite de tiempo.\r\n  const handleInput = () => {\r\n    //const checked = ev.target.checked;\r\n    props.showCorrectAnswer(/* //checked */);\r\n    props.upDateListAnswer();\r\n  };\r\n  return (\r\n    <label>\r\n      {rightOption}\r\n      <input\r\n        onChange={handleInput}\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        id={rightOptionId}\r\n        // checked={props.unChecked}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CorrectInput;\r\n","import styled from \"styled-components\";\r\nimport RandomInputs from \"./RandomInputs\";\r\nimport CorrectInput from \"./CorrectInput\";\r\n\r\nconst Form = styled.form`\r\n  font-size: 1.5em;\r\n  color: #007787;\r\n  margin: 1em;\r\n`;\r\nconst Container = styled.div`\r\n  font-size: 0.8em;\r\n  display: grid;\r\n  color: black;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin: 1em;\r\n`;\r\n\r\nconst Question = (props) => {\r\n  /* Averiguar como evitar que se quede checkado el input marcado de la pregunta anterior. Posible arreglo utilizando otro sistema de marcado (fav)*/\r\n  return (\r\n    <Form>\r\n      <label htmlFor=\"options\">\r\n        {props.text}\r\n        {/* Averiguar cómo colocar los inputs de manera aleatoria */}\r\n        <Container>\r\n          <RandomInputs trivia={props.trivia} />\r\n          <RandomInputs trivia={props.trivia} />\r\n          <CorrectInput\r\n            trivia={props.trivia}\r\n            showCorrectAnswer={props.showCorrectAnswer}\r\n            upDateListAnswer={props.upDateListAnswer}\r\n          />\r\n          <RandomInputs trivia={props.trivia} />\r\n        </Container>\r\n      </label>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","const AnswersList = (props) => {\r\n  console.log(props);\r\n  const list = props.answers.map((answer, index) => {\r\n    return <li key={index}>{answer}</li>;\r\n  });\r\n  return <ol>{list}</ol>;\r\n};\r\n\r\nexport default AnswersList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport api from \"../Services/Api\";\r\nimport Counter from \"./Counter\";\r\nimport Time from \"./Time\";\r\nimport Question from \"./TriviaQuestions\";\r\nimport AnswersList from \"./AnswersList\";\r\nimport Footer from \"./Footer\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Answer = styled.h3`\r\n  font-size: 1em;\r\n  color: #007787;\r\n  margin: 1em;\r\n`;\r\n\r\nconst QuizPage = () => {\r\n  const [trivia, setTrivia] = useState({});\r\n  const [fragment, setFragment] = useState(\"\");\r\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\r\n  // const [checked, setChecked] = useState({ checked: \"false\" });\r\n  const [numberCounter, setNumberCounter] = useState(1);\r\n  const [nextStep, setNextStep] = useState(\"Next question\");\r\n  const [questionsAnswered, setQuestionsAnswered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.trivia().then((dataNumber) => {\r\n      setTrivia(dataNumber);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (trivia.number) {\r\n      api.fragment(trivia.number).then((dataFragment) => {\r\n        setFragment(dataFragment.toUpperCase());\r\n      });\r\n    }\r\n  }, [trivia]);\r\n\r\n  //Cuando implemente el contador, la ejecución de estas funciones dependerá de que llegue al tiempo límite.\r\n  const showCorrectAnswer = () => {\r\n    setCorrectAnswer(trivia.text);\r\n  };\r\n  const upDateListAnswer = () => {\r\n    setQuestionsAnswered([...questionsAnswered, trivia.text]);\r\n  };\r\n\r\n  const upDateCounter = () => {\r\n    let nextNumberCounter;\r\n    if (numberCounter < 10) {\r\n      nextNumberCounter = numberCounter + 1;\r\n    }\r\n    return setNumberCounter(nextNumberCounter);\r\n  };\r\n\r\n  const handleButton = (/* unChecked */) => {\r\n    upDateCounter();\r\n    setCorrectAnswer(\"\");\r\n    // setChecked(null);\r\n    api.trivia().then((dataNumber) => {\r\n      setTrivia(dataNumber);\r\n    });\r\n    api.fragment(parseInt(trivia.number)).then((dataFragment) => {\r\n      setFragment(dataFragment.toUpperCase());\r\n    });\r\n    if (numberCounter < 9) {\r\n      setNextStep(\"Next question\");\r\n    } else if (numberCounter === 9) {\r\n      setNextStep(\"Play Again\");\r\n    } else {\r\n      setNumberCounter(1);\r\n      setQuestionsAnswered([]);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main>\r\n        <Counter counter={numberCounter} />\r\n        <Time />\r\n        <Question\r\n          trivia={trivia}\r\n          text={fragment}\r\n          counter={numberCounter}\r\n          showCorrectAnswer={showCorrectAnswer}\r\n          upDateListAnswer={upDateListAnswer}\r\n        />\r\n        <Answer>{correctAnswer}</Answer>\r\n        <Button onClick={handleButton}>{nextStep}</Button>\r\n        <AnswersList answers={questionsAnswered} trivia={trivia} />\r\n      </Main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","import { Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./LandingPage\";\nimport QuizPage from \"./QuizPage\";\nimport \"../Styles/App.scss\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <LandingPage />\n      </Route>\n      <Route path=\"/quizpage\">\n        <QuizPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./Styles/index.scss\";\nimport { HashRouter } from \"react-router-dom/cjs/react-router-dom.min\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}