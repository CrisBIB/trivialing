{"version":3,"sources":["Images/Trivialis2.png","Images/react.png","Components/Footer.js","Components/LandingPage.js","Components/Header.js","Services/Api.js","Components/Counter.js","Components/Timing.js","Components/RandomInputs.js","Components/CorrectInput.js","Components/TriviaQuestions.js","Components/AnswersList.js","Components/QuizPage.js","Components/App.js","index.js"],"names":["Footer","styled","footer","Container","div","React","img","FooterApp","href","target","src","logoReact","title","alt","Main","main","Title","h1","Image","Subtitle","h2","LandingPage","logoTrivialis","to","HeaderApp","header","Header","fetch","then","response","json","dataApi","number","text","Counter","props","counter","Timing","useEffect","setSuccess","setTimeout","setWarning","setDanger","trivia","ProgressBar","className","success","striped","variant","animated","warning","danger","RandomInputs","memo","getRandomNumber","max","Math","ceil","random","type","name","id","value","CorrectInput","rightOption","parseInt","rightOptionId","onChange","ev","Form","form","Answer","h3","Question","timeOut","htmlFor","correctAnswer","AnswersList","list","answers","map","answer","index","QuizPage","useState","setTrivia","fragment","setFragment","setCorrectAnswer","displaySuccess","setDisplaySuccess","displayWarning","setDisplayWarning","displayDanger","setDisplayDanger","buttonDisability","setButtonDisability","numberCounter","setNumberCounter","questionsAnswered","setQuestionsAnswered","api","dataNumber","numberToString","toString","includes","NaN","dataFragment","toUpperCase","upDateListAnswer","resetProgressBar","handleButton","nextNumberCounter","upDateCounter","Button","onClick","disabled","disable","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b55de938.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Trivialis2.c97a0504.png\";","export default __webpack_public_path__ + \"static/media/react.d32b912d.png\";","import styled from \"styled-components\";\r\nimport logoReact from \"../Images/react.png\";\r\n\r\nconst Footer = styled.footer`\r\n  background: black;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst React = styled.img`\r\n  width: 25px;\r\n`;\r\n\r\nconst FooterApp = () => {\r\n  return (\r\n    <Footer>\r\n      <small>CrisBIB &copy; 2021</small>\r\n      <Container>\r\n        <small>Powered by</small>\r\n        <a href=\"https://es.reactjs.org/\" target=\"_blank\">\r\n          <React src={logoReact} title=\"Logo React\" alt=\"logo-reactjs\" />\r\n        </a>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default FooterApp;\r\n","import logoTrivialis from \"../Images/Trivialis2.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  height: 90vh;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 3em;\r\n  margin-top: 1em;\r\n  color: #007787;\r\n`;\r\nconst Image = styled.img`\r\n  width: 30%;\r\n  display: inline-block;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 70px;\r\n  z-index: -1;\r\n`;\r\nconst Subtitle = styled.h2`\r\n  font-size: 1.7em;\r\n  text-align: center;\r\n  margin-top: 1em;\r\n  color: #007787;\r\n`;\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <Main>\r\n        <Container>\r\n          <Title>TRIVIALIS</Title>\r\n          <Image\r\n            title=\"Logo Trivialis\"\r\n            src={logoTrivialis}\r\n            alt=\"logo-trivialis\"\r\n          />\r\n        </Container>\r\n        <Subtitle>Wellcome to the amazing world of numbers!</Subtitle>\r\n        <div>\r\n          {/*Hacer un colapsable*/}\r\n          <h4>Ver instrucciones</h4>\r\n        </div>\r\n        <Link to=\"/quizpage\">READY TO QUIZ?</Link>\r\n      </Main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import logoTrivialis from \"../Images/Trivialis2.png\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderApp = styled.header`\r\n  height: 10vh;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0.8em;\r\n  border-bottom: solid 1px #007787;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 1em;\r\n  color: #007787;\r\n  margin-top: 0.8em;\r\n`;\r\nconst Image = styled.img`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderApp>\r\n      <Container>\r\n        <Title>TRIVIALIS</Title>\r\n\r\n        <Image\r\n          title=\"Logo Trivialis\"\r\n          src={logoTrivialis}\r\n          alt=\"logo-trivialis\"\r\n        />\r\n      </Container>\r\n    </HeaderApp>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const getRandomNumberFromApi = () => {\r\n  return fetch(`//numbersapi.com/random/trivia?json`)\r\n    .then((response) => response.json())\r\n    .then((dataApi) => {\r\n      return dataApi;\r\n    });\r\n};\r\nconst getFragmentNumberFromApi = (number) => {\r\n  return fetch(`//numbersapi.com/${number}/trivia?fragment`)\r\n    .then((response) => response.text())\r\n    .then((dataApi) => {\r\n      return dataApi;\r\n    });\r\n};\r\n\r\nexport default {\r\n  trivia: getRandomNumberFromApi,\r\n  fragment: getFragmentNumberFromApi,\r\n};\r\n","const Counter = (props) => {\r\n  return (\r\n    <div>\r\n      <small> Question {props.counter} of 10</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useEffect } from \"react\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport \"../Styles/time.scss\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 70%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Timing = (props) => {\r\n  useEffect(() => {\r\n    props.setSuccess(\"end animation\");\r\n    const warningProgress = () => {\r\n      props.setWarning(\"end animation\");\r\n    };\r\n    setTimeout(warningProgress, 10000);\r\n    const dangerProgress = () => {\r\n      props.setDanger(\"end animation\");\r\n    };\r\n    setTimeout(dangerProgress, 20000);\r\n  }, [props.trivia]);\r\n\r\n  return (\r\n    <Container>\r\n      <label>Timing</label>\r\n      <ProgressBar>\r\n        <ProgressBar\r\n          className={`${props.success}`}\r\n          striped\r\n          variant=\"success\"\r\n          animated\r\n          key={1}\r\n        />\r\n        <ProgressBar\r\n          className={`${props.warning}`}\r\n          variant=\"warning\"\r\n          animated\r\n          key={2}\r\n        />\r\n        <ProgressBar\r\n          className={`${props.danger}`}\r\n          striped\r\n          variant=\"danger\"\r\n          animated\r\n          key={3}\r\n        />\r\n      </ProgressBar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Timing;\r\n","import React from \"react\";\r\n\r\nconst RandomInputs = React.memo((props) => {\r\n  const getRandomNumber = (max) => {\r\n    return Math.ceil(Math.random() * max);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        {getRandomNumber(1000)}\r\n        <input\r\n          type=\"radio\"\r\n          name=\"options\"\r\n          id=\"options\"\r\n          value=\"\"\r\n          id={getRandomNumber(1000)}\r\n        ></input>\r\n      </label>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RandomInputs;\r\n","const CorrectInput = (props) => {\r\n  const rightOption = parseInt(props.trivia.number);\r\n  const rightOptionId = props.trivia.number;\r\n\r\n  //Esta función me servirá para guardar en el estado las respuestas correctas que se den, y pintarlas en verdes en el listado de preguntas contestadas.\r\n  const handleInput = (ev) => {\r\n    const checked = ev.target.value;\r\n  };\r\n  return (\r\n    <label>\r\n      {rightOption}\r\n      <input\r\n        onChange={handleInput}\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        id={rightOptionId}\r\n        // checked={props.unChecked}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CorrectInput;\r\n","import React, { useEffect } from \"react\";\r\nimport RandomInputs from \"./RandomInputs\";\r\nimport CorrectInput from \"./CorrectInput\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  font-size: 1.5em;\r\n  color: #007787;\r\n  margin: 1em;\r\n`;\r\nconst Container = styled.div`\r\n  font-size: 0.8em;\r\n  display: grid;\r\n  color: black;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin: 1em;\r\n`;\r\nconst Answer = styled.h3`\r\n  font-size: 1em;\r\n  color: #007787;\r\n  margin: 1em;\r\n`;\r\n\r\nconst Question = (props) => {\r\n  useEffect(() => {\r\n    const timeOut = () => {\r\n      props.timeOut();\r\n    };\r\n    setTimeout(timeOut, 30000);\r\n  }, [props.trivia]);\r\n\r\n  /* Averiguar como evitar que se quede checkado el input marcado de la pregunta anterior. Posible arreglo utilizando otro sistema de marcado (fav)*/\r\n  return (\r\n    <>\r\n      <Form>\r\n        <label htmlFor=\"options\">\r\n          {props.text}\r\n          {/* Averiguar cómo colocar los inputs de manera aleatoria */}\r\n          <Container>\r\n            <RandomInputs trivia={props.trivia} />\r\n            <RandomInputs trivia={props.trivia} />\r\n            <CorrectInput trivia={props.trivia} />\r\n            <RandomInputs trivia={props.trivia} />\r\n          </Container>\r\n        </label>\r\n      </Form>\r\n      <Answer>{props.correctAnswer}</Answer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","const AnswersList = (props) => {\r\n  const list = props.answers.map((answer, index) => {\r\n    return <li key={index}>{answer}</li>;\r\n  });\r\n  return <ol>{list}</ol>;\r\n};\r\n\r\nexport default AnswersList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport api from \"../Services/Api\";\r\nimport Counter from \"./Counter\";\r\nimport Timing from \"./Timing\";\r\nimport Question from \"./TriviaQuestions\";\r\nimport AnswersList from \"./AnswersList\";\r\nimport Footer from \"./Footer\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst QuizPage = () => {\r\n  const [trivia, setTrivia] = useState({});\r\n  const [fragment, setFragment] = useState(\"\");\r\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\r\n  const [displaySuccess, setDisplaySuccess] = useState(\"start\");\r\n  const [displayWarning, setDisplayWarning] = useState(\"start\");\r\n  const [displayDanger, setDisplayDanger] = useState(\"start\");\r\n  const [buttonDisability, setButtonDisability] = useState(true);\r\n  const [numberCounter, setNumberCounter] = useState(1);\r\n  const [questionsAnswered, setQuestionsAnswered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.trivia().then((dataNumber) => {\r\n      setTrivia(dataNumber);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (trivia.number) {\r\n      const numberToString = trivia.number.toString();\r\n      if (numberToString.includes(\"+\")) {\r\n        api.trivia().then((dataNumber) => {\r\n          setTrivia(dataNumber);\r\n        });\r\n      } else if (typeof trivia.number === NaN) {\r\n        api.trivia().then((dataNumber) => {\r\n          setTrivia(dataNumber);\r\n        });\r\n      } else {\r\n        api.fragment(numberToString).then((dataFragment) => {\r\n          setFragment(dataFragment.toUpperCase());\r\n        });\r\n      }\r\n    }\r\n  }, [trivia]);\r\n\r\n  useEffect(() => {\r\n    setButtonDisability(true);\r\n  }, [trivia]);\r\n\r\n  const timeOut = () => {\r\n    setCorrectAnswer(trivia.text);\r\n    resetProgressBar();\r\n    setButtonDisability(false);\r\n    upDateListAnswer();\r\n  };\r\n  const nextButton = () => {\r\n    if (numberCounter < 10) {\r\n      return (\r\n        <Button\r\n          variant=\"info\"\r\n          onClick={handleButton}\r\n          disabled={buttonDisability}\r\n        >\r\n          Next question\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button disable variant=\"warning\" onClick={handleButton}>\r\n          Play again\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  const upDateListAnswer = () => {\r\n    setQuestionsAnswered([...questionsAnswered, trivia.text]);\r\n  };\r\n  const resetProgressBar = () => {\r\n    setDisplaySuccess(\"start\");\r\n    setDisplayWarning(\"start\");\r\n    setDisplayDanger(\"start\");\r\n  };\r\n  const upDateCounter = () => {\r\n    let nextNumberCounter;\r\n    if (numberCounter < 10) {\r\n      nextNumberCounter = numberCounter + 1;\r\n    } else {\r\n      setNumberCounter(1);\r\n      setQuestionsAnswered([]);\r\n    }\r\n    return setNumberCounter(nextNumberCounter);\r\n  };\r\n\r\n  const handleButton = () => {\r\n    upDateCounter();\r\n    setCorrectAnswer(\"\");\r\n    api.trivia().then((dataNumber) => {\r\n      setTrivia(dataNumber);\r\n    });\r\n    api.fragment(parseInt(trivia.number)).then((dataFragment) => {\r\n      setFragment(dataFragment.toUpperCase());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main>\r\n        <Counter counter={numberCounter} />\r\n        <Timing\r\n          trivia={trivia}\r\n          //Averiguar la manera de optimizar este código\r\n          success={displaySuccess}\r\n          warning={displayWarning}\r\n          danger={displayDanger}\r\n          setSuccess={setDisplaySuccess}\r\n          setWarning={setDisplayWarning}\r\n          setDanger={setDisplayDanger}\r\n        />\r\n        <Question\r\n          trivia={trivia}\r\n          text={fragment}\r\n          counter={numberCounter}\r\n          correctAnswer={correctAnswer}\r\n          timeOut={timeOut}\r\n        />\r\n        <div>{nextButton()}</div>\r\n        <AnswersList answers={questionsAnswered} trivia={trivia} />\r\n      </Main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","import { Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./LandingPage\";\nimport QuizPage from \"./QuizPage\";\nimport \"../Styles/App.scss\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <LandingPage />\n      </Route>\n      <Route path=\"/quizpage\">\n        <QuizPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport App from \"./Components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Styles/index.scss\";\nimport \"./Styles/App.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}